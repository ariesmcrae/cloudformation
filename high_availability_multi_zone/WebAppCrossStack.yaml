AWSTemplateFormatVersion: '2010-09-09'

# aws s3 cp WebAppCrossStack.yaml s3://ariesmcrae-cloudformation/WebAppCrossStack.template --grants read=uri=http://acs.amazonaws.com/groups/global/AllUsers --content-type 'text/plain'

# aws cloudformation create-stack --region us-west-2 --stack-name mywebapp-dev --template-url https://s3.amazonaws.com/ariesmcrae-cloudformation/WebAppCrossStack.template --parameters ParameterKey=KeyName,ParameterValue=ries_keypair ParameterKey=PublicInstanceType,ParameterValue=t2.nano

# aws cloudformation update-stack --region us-west-2 --stack-name mywebapp-dev --template-url https://s3.amazonaws.com/ariesmcrae-cloudformation/WebAppCrossStack.template --parameters ParameterKey=KeyName,ParameterValue=ries_keypair ParameterKey=PublicInstanceType,ParameterValue=t2.nano
  

Description: 'WebAppCrossStack'


############################################################################ 
# Parameters
############################################################################
Parameters:
  NetworkStackName: 
    Type: String
    Default: 'myproject-dev'   
    Description: The Network Stack name.

  PublicInstanceType: 
    Type: String
    Default: t2.nano
    AllowedValues: [t2.nano, t2.micro]
    Description: 'Enter t2.nano, t2.micro. Default is t2.nano.'
    ConstraintDescription: Must be a valid EC2 instance type.

  PrivateInstanceType: 
    Type: String
    Default: t2.micro
    AllowedValues: [t2.nano, t2.micro]
    Description: 'Enter t2.nano, t2.micro. Default is t2.micro.'
    ConstraintDescription: Must be a valid EC2 instance type.    

  KeyName:    
    Type: String
    Default: foobar_keypair    
    Description: 'The private keypair pem for ssh''ing to the vm instance'

  DesiredCapacity:
      Type: Number
      Default: '1'
      Description: Number of EC2 instances to launch.

  MaxSize:
    Type: Number
    Default: '1'
    Description: Maximum number of instances that can be launched.      


############################################################################ 
# Metadata Interface for CloudFormation AWS UI Console
############################################################################
Metadata: 
  AWS::CloudFormation::Interface: 
    ParameterGroups: 
      - Label: 
          default: 'Network'
        Parameters: [ NetworkStackName ]
      - Label: 
          default: 'EC2'
        Parameters: [ PublicInstanceType, PrivateInstanceType, KeyName ]
      - Label: 
          default: 'Auto Scale'
        Parameters: [ DesiredCapacity, MaxSize ]
    ParameterLabels:
      NetworkStackName: 
        default: 'What is the name of the stack which you should have ran prior to this?'
      DesiredCapacity: 
        default: 'Auto Scaling ensures that your group has this many instances.'
      MaxSize: 
        default: 'The maximum number of instances in each Auto Scaling group.'

############################################################################ 
# Mappings
############################################################################
Mappings:
  ECSOptimizedAMI:
    # http://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html
    us-west-2: # Oregon
      AMIID: ami-7abc111a 
    ap-southeast-2: # Sydney
      AMIID: ami-5781be34



############################################################################ 
# Root Resource
############################################################################
Resources:
  ############################################################################ 
  # Public EC2 Instance ssh bastion LaunchConfiguration
  ############################################################################
  LaunchConfigurationPublicInstance: 
    Type: AWS::AutoScaling::LaunchConfiguration

    # Metadata: 
    #   AWS::CloudFormation::Init: 
    #     config: 
    #       packages: 
    #         :
    #       groups: 
    #         :
    #       users: 
    #         :
    #       sources: 
    #         :
    #       files: 
    #         :
    #       commands: 
    #         :
    #       services: 
    #         :    
    Properties:
      AssociatePublicIpAddress: true    
      ImageId: !FindInMap [ ECSOptimizedAMI, !Ref 'AWS::Region', AMIID ]
      InstanceType: !Ref PublicInstanceType
      KeyName: !Ref KeyName
      SecurityGroups: ['Fn::ImportValue': !Sub '${NetworkStackName}-SecurityGroupPublicInstanceId']
      BlockDeviceMappings: 
        - DeviceName: '/dev/xvda'
          Ebs: 
            VolumeSize: '8' # 8GB
            VolumeType: 'gp2'
            DeleteOnTermination: 'true'

  ############################################################################ 
  # Public EC2 Instance ssh bastion host AutoScalingGroup
  ############################################################################
  ECSAutoScalingGroupPublic:
      Type: AWS::AutoScaling::AutoScalingGroup
      DependsOn: LaunchConfigurationPublicInstance
      Properties:
        LaunchConfigurationName: !Ref LaunchConfigurationPublicInstance
        DesiredCapacity: !Ref DesiredCapacity
        MinSize: '1'
        MaxSize: !Ref MaxSize
        HealthCheckType: EC2
        HealthCheckGracePeriod: 300 #The length of time in seconds after a new EC2 instance comes into service that Auto Scaling starts checking its health.        
        TerminationPolicies: [Default]
        VPCZoneIdentifier:
          - 'Fn::ImportValue': !Sub '${NetworkStackName}-SubnetAZaPublicId'
          - 'Fn::ImportValue': !Sub '${NetworkStackName}-SubnetAZbPublicId'
        Cooldown: 300


  ############################################################################ 
  # Private Subnet EC2 Instance Web Server LaunchConfiguration
  ############################################################################
  # LaunchConfigurationPrivateInstance: 
  #   Type: AWS::AutoScaling::LaunchConfiguration
  #   Properties:
  #     AssociatePublicIpAddress: false    
  #     ImageId: !FindInMap [ ECSOptimizedAMI, !Ref 'AWS::Region', AMIID ]
  #     InstanceType: !Ref PrivateInstanceType
  #     KeyName: !Ref KeyName
  #     SecurityGroups: ['Fn::ImportValue': !Sub '${NetworkStackName}-SecurityGroupPrivateInstanceId']
  #     BlockDeviceMappings: 
  #       - DeviceName: '/dev/xvda'
  #         Ebs: 
  #           VolumeSize: '8' # 8GB
  #           VolumeType: 'gp2'
  #           DeleteOnTermination: 'true'      
  #     UserData:
  #       Fn::Base64: !Sub |
  #         #!/bin/bash
  #         yum install httpd -y
  #         yum update -y
  #         service httpd start
  #         chkconfig httpd on
  #         echo '<html><h1>hello world Private Subnet</h1></html>' > /var/www/html/index.html


