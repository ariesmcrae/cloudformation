AWSTemplateFormatVersion: '2010-09-09'

# aws s3 cp WebAppCrossStack.yaml s3://ariesmcrae-cloudformation/WebAppCrossStack.template --grants read=uri=http://acs.amazonaws.com/groups/global/AllUsers --content-type 'text/plain'

# aws cloudformation create-stack --region us-west-2 --stack-name mywebapp-dev --template-url https://s3.amazonaws.com/ariesmcrae-cloudformation/WebAppCrossStack.template --parameters ParameterKey=KeyName,ParameterValue=ries_keypair ParameterKey=InstanceType,ParameterValue=t2.micro

# aws cloudformation update-stack --region us-west-2 --stack-name mywebapp-dev --template-url https://s3.amazonaws.com/ariesmcrae-cloudformation/WebAppCrossStack.template --parameters ParameterKey=KeyName,ParameterValue=ries_keypair ParameterKey=InstanceType,ParameterValue=t2.micro

Description: 'WebAppCrossStack'


Parameters:
  NetworkStackName: 
    Type: String
    Default: 'myproject-dev'   
    Description: The Network Stack name.
  InstanceType: 
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.nano     
      - t2.micro
    Description: 'Enter t2.nano, t2.micro. Default is t2.micro.'
    ConstraintDescription: Must be a valid EC2 instance type.
  KeyName:    
    Type: String
    Default: ries_keypair
  DesiredCapacity:
      Type: Number
      Default: '1'
      Description: Number of EC2 instances to launch.    
  MaxSize:
    Type: Number
    Default: '1'
    Description: Maximum number of instances that can be launched.      

Mappings:
  AWSRegionToAMI:
    us-west-2: # oregon
      AMIID: ami-56ed4936 #ECS AMI Oregon
    ap-southeast-2: #sydney
      AMIID: ami-73407d10 #ECS AMI Sydney
    amazon:
        AMIID: ami-5ec1673e #Genric Amazon AMI


Resources:
  ############################################################################ 
  # Public EC2 Instance ssh bastion LaunchConfiguration
  ############################################################################
  LaunchConfigurationPublicInstance: 
    Type: 'AWS::AutoScaling::LaunchConfiguration'
    Properties:
      AssociatePublicIpAddress: true    
      ImageId: !FindInMap [ AWSRegionToAMI, amazon, AMIID ]
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      SecurityGroups: ['Fn::ImportValue': !Sub '${NetworkStackName}-SecurityGroupPublicInstanceId']
      BlockDeviceMappings: 
        - DeviceName: '/dev/xvda'
          Ebs: 
            VolumeSize: '1'
            VolumeType: 'gp2'
            DeleteOnTermination: 'true'

  ############################################################################ 
  # Public EC2 Instance AutoScalingGroup
  ############################################################################
  ECSAutoScalingGroup:
      Type: AWS::AutoScaling::AutoScalingGroup
      DependsOn: [ LaunchConfigurationPublicInstance ]
      Properties:
        Cooldown: 300      
        DesiredCapacity: !Ref DesiredCapacity
        MinSize: '1'
        MaxSize: !Ref MaxSize
        HealthCheckGracePeriod: 300
        HealthCheckType: EC2
        LaunchConfigurationName: !Ref LaunchConfigurationPublicInstance
        VPCZoneIdentifier:
          - 'Fn::ImportValue': !Sub '${NetworkStackName}-SubnetAZaPublicId'
          - 'Fn::ImportValue': !Sub '${NetworkStackName}-SubnetAZbPublicId'          
      CreationPolicy:
        ResourceSignal:
          Timeout: PT15M


  ############################################################################ 
  # Private Subnet EC2 Instance Web Server LaunchConfiguration
  ############################################################################
  LaunchConfigurationPrivateInstance: 
    Type: 'AWS::AutoScaling::LaunchConfiguration'
    Properties:
      AssociatePublicIpAddress: false    
      ImageId: !FindInMap [ AWSRegionToAMI, amazon, AMIID ]
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      SecurityGroups: ['Fn::ImportValue': !Sub '${NetworkStackName}-SecurityGroupPrivateInstanceId']
      BlockDeviceMappings: 
        - DeviceName: '/dev/xvda'
          Ebs: 
            VolumeSize: '1'
            VolumeType: 'gp2'
            DeleteOnTermination: 'true'      
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum install httpd -y
          yum update -y
          service httpd start
          chkconfig httpd on
          echo "<html><h1>hello world Private Subnet</h1></html>" > /var/www/html/index.html


