{
  "AWSTemplateFormatVersion" : "2010-09-09",


  "Description" : "NetworkCrossStack",


  "Mappings" : {
    "Config" : {
      "SubnetPublicMap" : { "CIDRa" : "10.0.1.0/24", "CIDRb" : "10.0.2.0/24" },
      "SubnetPrivateMap" : { "CIDRa" : "10.0.3.0/24", "CIDRb" : "10.0.4.0/24" }
    }
  },


  "Resources" : {
    "VpcId": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true",
        "InstanceTenancy": "default",
        "Tags": [ { "Key": "Name", "Value": { "Ref": "AWS::StackName" } } ]
      }
    },

    "InternetGatewayId" : {
      "Type" : "AWS::EC2::InternetGateway",
      "Properties" : {
        "Tags" : [ {"Key" : "Name", "Value" : {"Ref": "AWS::StackName"} } ]
      }
    },

    "VPCGatewayAttachment" : {
      "Type" : "AWS::EC2::VPCGatewayAttachment",
      "DependsOn": ["VpcId", "InternetGatewayId"],        
      "Properties" : {
        "VpcId" : { "Ref" : "VpcId" }, 
        "InternetGatewayId" : { "Ref" : "InternetGatewayId" }
      }
    },        
    
    "SubnetAPublicId" : {
      "Type" : "AWS::EC2::Subnet",
      "DependsOn" : "VpcId",      
      "Properties" : {
        "VpcId" : { "Ref" : "VpcId" },
          "CidrBlock" : { "Fn::FindInMap" : [ "Config", "SubnetPublicMap", "CIDRa"] },
          "MapPublicIpOnLaunch" : "true",
          "AvailabilityZone" : { "Fn::Select" : [ "0", { "Fn::GetAZs" : "" } ] },                                          
          "Tags" : [
              {"Key" : "Name", "Value" : { "Fn::Sub": [ "${ParentStackName}-a-public", { "ParentStackName": {"Ref" : "AWS::StackName" }} ]} },
              {"Key" : "Network", "Value" : "Public"} 
          ]
        }
      },

    "SubnetBPublicId" : {
       "Type" : "AWS::EC2::Subnet",
       "DependsOn" : "VpcId",       
       "Properties" : {
         "VpcId" : { "Ref" : "VpcId" },
         "CidrBlock" : { "Fn::FindInMap" : [ "Config", "SubnetPublicMap", "CIDRb"] },
         "MapPublicIpOnLaunch" : "true",
         "AvailabilityZone" : { "Fn::Select" : [ "1", { "Fn::GetAZs" : "" } ] },                                          
         "Tags" : [
            {"Key" : "Name", "Value" : { "Fn::Sub": [ "${ParentStackName}-b-public", { "ParentStackName": {"Ref" : "AWS::StackName" }} ]} },
            {"Key" : "Network", "Value" : "Public"} 
         ]
       }
    },

    "SubnetAPrivateId" : {
       "Type" : "AWS::EC2::Subnet",
       "DependsOn" : "VpcId",       
       "Properties" : {
         "VpcId" : { "Ref" : "VpcId" },
         "CidrBlock" : { "Fn::FindInMap" : [ "Config", "SubnetPrivateMap", "CIDRa"] },
         "MapPublicIpOnLaunch" : "false",           
         "AvailabilityZone" : { "Fn::Select" : [ "0", { "Fn::GetAZs" : "" } ] },                                          
         "Tags" : [
           {"Key" : "Name", "Value" : { "Fn::Sub": [ "${ParentStackName}-a-private", { "ParentStackName": {"Ref" : "AWS::StackName" }} ]} },
            {"Key" : "Network", "Value" : "Private"} 
         ]
       }
    },

    "SubnetBPrivateId" : {
      "Type" : "AWS::EC2::Subnet",
      "DependsOn" : "VpcId",      
      "Properties" : {
        "VpcId" : { "Ref" : "VpcId" },
        "CidrBlock" : { "Fn::FindInMap" : [ "Config", "SubnetPrivateMap", "CIDRb"] },
        "MapPublicIpOnLaunch" : "false",
        "AvailabilityZone" : { "Fn::Select" : [ "1", { "Fn::GetAZs" : "" } ] },                                          
        "Tags" : [
          {"Key" : "Name", "Value" : { "Fn::Sub": [ "${ParentStackName}-b-private", { "ParentStackName": {"Ref" : "AWS::StackName" }} ]} },
          {"Key" : "Network", "Value" : "Private"} 
        ]
      }
    },

    "EIPa" : {
      "Type" : "AWS::EC2::EIP",
      "Properties" : { "Domain" : "vpc" }
    },

    "EIPb" : {
      "Type" : "AWS::EC2::EIP",
      "Properties" : { "Domain" : "vpc" }
    },

    "NatGatewayAId" : {
      "DependsOn" : [ "SubnetAPublicId", "EIPa" ],
      "Type" : "AWS::EC2::NatGateway",
      "Properties" : {
        "SubnetId" : { "Ref" : "SubnetAPublicId"},        
        "AllocationId" : { "Fn::GetAtt" : ["EIPa", "AllocationId"]}
      }
    },

    "NatGatewayBId" : {
      "DependsOn" : [ "SubnetBPublicId", "EIPb" ],
      "Type" : "AWS::EC2::NatGateway",
      "Properties" : {
        "SubnetId" : { "Ref" : "SubnetBPublicId"},        
        "AllocationId" : { "Fn::GetAtt" : ["EIPb", "AllocationId"]}
      }
    },

    "RouteTablePublicId" : {
         "Type" : "AWS::EC2::RouteTable",
         "DependsOn" : "VpcId",         
         "Properties" : {
            "VpcId" : { "Ref" : "VpcId" },
            "Tags" : [
              {"Key" : "Name", "Value" : { "Fn::Sub": [ "${ParentStackName}-a-public", { "ParentStackName": {"Ref" : "AWS::StackName" }} ]} },
              {"Key" : "Network", "Value" : "Public"} 
          ]
         }
    },

    "RoutePublic" : {
       "Type" : "AWS::EC2::Route",
       "DependsOn" : ["InternetGatewayId", "RouteTablePublicId"],
       "Properties" : {
          "RouteTableId" : { "Ref" : "RouteTablePublicId" },
          "DestinationCidrBlock" : "0.0.0.0/0",
          "GatewayId" : { "Ref" : "InternetGatewayId" }
       }
    },

    "SubnetPublicRouteTableAssociationA" : {
       "Type" : "AWS::EC2::SubnetRouteTableAssociation",
       "DependsOn" : ["RouteTablePublicId", "SubnetAPublicId"],       
       "Properties" : {
          "SubnetId" : { "Ref" : "SubnetAPublicId" },
          "RouteTableId" : { "Ref" : "RouteTablePublicId" }
       }
    },

    "SubnetPublicRouteTableAssociationB" : {
       "Type" : "AWS::EC2::SubnetRouteTableAssociation",
       "DependsOn" : ["SubnetBPublicId", "RouteTablePublicId"],       
       "Properties" : {
          "SubnetId" : { "Ref" : "SubnetBPublicId" },
          "RouteTableId" : { "Ref" : "RouteTablePublicId" }
       }
    },

    "RouteTablePrivateAId" : {
      "Type" : "AWS::EC2::RouteTable",
      "DependsOn" : "VpcId",         
      "Properties" : {
      "VpcId" : { "Ref" : "VpcId" },
        "Tags" : [
          {"Key" : "Name", "Value" : { "Fn::Sub": [ "${ParentStackName}-a-private", { "ParentStackName": {"Ref" : "AWS::StackName" }} ]} },
          {"Key" : "Network", "Value" : "Private"} 
        ]
      }
    },

    "RouteToInternetA" : {
       "Type" : "AWS::EC2::Route",
       "DependsOn" : ["RouteTablePrivateAId", "NatGatewayAId"],
       "Properties" : {
          "RouteTableId" : { "Ref" : "RouteTablePrivateAId" },
          "DestinationCidrBlock" : "0.0.0.0/0",
          "NatGatewayId" : { "Ref" : "NatGatewayAId" }
       }
    },

    "SubnetPrivateRouteTableAssociationA" : {
       "Type" : "AWS::EC2::SubnetRouteTableAssociation",
       "DependsOn" : ["SubnetAPrivateId", "RouteTablePrivateAId"],       
       "Properties" : {
          "SubnetId" : { "Ref" : "SubnetAPrivateId" },
          "RouteTableId" : { "Ref" : "RouteTablePrivateAId" }
       }
    },      

    "RouteTablePrivateBId" : {
      "Type" : "AWS::EC2::RouteTable",
      "DependsOn" : "VpcId",         
      "Properties" : {
      "VpcId" : { "Ref" : "VpcId" },
        "Tags" : [
          {"Key" : "Name", "Value" : { "Fn::Sub": [ "${ParentStackName}-b-private", { "ParentStackName": {"Ref" : "AWS::StackName" }} ]} },
          {"Key" : "Network", "Value" : "Private"} 
        ]
      }
    },

    "RouteToInternetB" : {
       "Type" : "AWS::EC2::Route",
       "DependsOn" : ["RouteTablePrivateBId", "NatGatewayAId"],
       "Properties" : {
          "RouteTableId" : { "Ref" : "RouteTablePrivateBId" },
          "DestinationCidrBlock" : "0.0.0.0/0",
          "NatGatewayId" : { "Ref" : "NatGatewayBId" }
       }
    },

    "SubnetPrivateRouteTableAssociationB" : {
       "Type" : "AWS::EC2::SubnetRouteTableAssociation",
       "DependsOn" : ["SubnetBPrivateId", "RouteTablePrivateBId"],       
       "Properties" : {
          "SubnetId" : { "Ref" : "SubnetBPrivateId" },
          "RouteTableId" : { "Ref" : "RouteTablePrivateBId" }
       }
    },

    "SecurityGroupElbId" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "DependsOn" : "VpcId",      
      "Properties" : {
        "GroupDescription" : "Security group for Application Elastic Load Balancer",
        "VpcId" : {"Ref" : "VpcId"},
        "SecurityGroupIngress" : [
            { "IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "CidrIp" : "0.0.0.0/0"},
            { "IpProtocol" : "tcp", "FromPort" : "443", "ToPort" : "443", "CidrIp" : "0.0.0.0/0"}          
        ],
        "Tags" : [ {"Key" : "Name", "Value" : { "Fn::Sub": [ "${ParentStackName}-elb", { "ParentStackName": {"Ref" : "AWS::StackName" }} ]} } ]        
      }
    },

    "SecurityGroupPublicInstanceId" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "DependsOn" : "VpcId",      
      "Properties" : {
        "GroupDescription" : "Security group for EC2 Public instance",
        "VpcId" : {"Ref" : "VpcId"},
        "SecurityGroupIngress" : [ { "IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : "0.0.0.0/0"} ],
        "Tags" : [ {"Key" : "Name", "Value" : { "Fn::Sub": [ "${ParentStackName}-public", { "ParentStackName": {"Ref" : "AWS::StackName" }} ]} } ]        
      }
    },

    "SecurityGroupPrivateInstanceId" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "DependsOn" : ["VpcId", "SecurityGroupElbId", "SecurityGroupPublicInstanceId"],      
      "Properties" : {
        "GroupDescription" : "Security group for EC2 Private instance",
        "VpcId" : {"Ref" : "VpcId"},
        "SecurityGroupIngress" : [ 
          { "IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "SourceSecurityGroupId" : {"Ref" : "SecurityGroupElbId" }},
          { "IpProtocol" : "tcp", "FromPort" : "443", "ToPort" : "443", "SourceSecurityGroupId" : {"Ref" : "SecurityGroupElbId" }},          
          { "IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "SourceSecurityGroupId" : {"Ref" : "SecurityGroupPublicInstanceId" }},
          { "IpProtocol" : "icmp", "FromPort" : "-1", "ToPort" : "-1", "SourceSecurityGroupId" : {"Ref" : "SecurityGroupPublicInstanceId" }}
        ],
        "Tags" : [ {"Key" : "Name", "Value" : { "Fn::Sub": [ "${ParentStackName}-private", { "ParentStackName": {"Ref" : "AWS::StackName" }} ]} } ]        
      }
    },

    "NetworkAclPublic" : {
      "Type" : "AWS::EC2::NetworkAcl",
      "DependsOn" : "VpcId",      
      "Properties" : {
         "VpcId" : { "Ref" : "VpcId" },
         "Tags" : [ {"Key" : "Name", "Value" : { "Fn::Sub": [ "${ParentStackName}-public", { "ParentStackName": {"Ref" : "AWS::StackName" }} ]} } ]
      }
    },

    "NetworkAclEntryPublicInbound" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "DependsOn" : "NetworkAclPublic",       
      "Properties" : {
        "NetworkAclId" : { "Ref" : "NetworkAclPublic" },
        "RuleNumber" : "100",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : { "From" : "22", "To" : "22" }
       }
    }, 

    "NetworkAclEntryPublicOutbound" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "DependsOn" : "NetworkAclPublic",      
      "Properties" : {
        "NetworkAclId" : { "Ref" : "NetworkAclPublic" },
        "RuleNumber" : "100",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : { "From" : "0", "To" : "65535" }
       }
    },

    "SubnetNetworkAclAssociationPublicA" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "DependsOn" : ["SubnetAPublicId", "NetworkAclPublic"],      
      "Properties" : {
        "SubnetId" : { "Ref" : "SubnetAPublicId" },
        "NetworkAclId" : { "Ref" : "NetworkAclPublic" }
      }
    },

    "SubnetNetworkAclAssociationPublicB" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "DependsOn" : ["SubnetAPublicId", "NetworkAclPublic"],      
      "Properties" : {
        "SubnetId" : { "Ref" : "SubnetBPublicId" },
        "NetworkAclId" : { "Ref" : "NetworkAclPublic" }
      }
    }

  }

}